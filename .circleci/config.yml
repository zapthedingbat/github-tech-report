version: 2
jobs:
  build:
    docker:
      - image: docker:stable-git
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Build docker image
          command: docker build --rm=false -t zapthedingbat/repository-report:$CIRCLE_SHA1 .
      - run:
          name: Copy output artifacts
          command: |
            BUILDER_CONTAINER=$(docker ps -a -q -l -f "label=image=builder")
            docker cp $BUILDER_CONTAINER:/home/node/app/.output /tmp/.output
      - store_test_results:
          path: /tmp/.output/test-results
      - store_artifacts:
          path: /tmp/.output/coverage
          destination: coverage
      - deploy:
          name: Publish image (on master branch)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag zapthedingbat/repository-report:$CIRCLE_SHA1 zapthedingbat/repository-report:latest
              docker push zapthedingbat/repository-report
            fi
  generate-report:
    docker:
      - image: docker:stable-git
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Write environment config to file
          command: env > $(pwd)/.env
      - run:
          name: Write github private key
          command: |
            mkdir $(pwd)/.keys
            echo $GITHUB_PRIVATE_KEY | base64 -d > $(pwd)/.keys/github-private-key.pem
            docker create -v /home/node/app/.keys --name keys alpine /bin/true
            docker cp $(pwd)/.keys/github-private-key.pem keys:/home/node/app/.keys
      - run:
          name: Generate report
          command: >
            docker run
            --name app
            --env-file=.env
            --volumes-from keys
            zapthedingbat/repository-report
      - run:
          name: Copy output artifacts
          command: docker cp app:/home/node/app/.output /tmp/.output
      - store_artifacts:
          path: /tmp/.output/reports
          destination: reports
workflows:
  version: 2
  build:
    jobs:
      - build
      - generate-report:
          requires:
            - build
          filters:
            branches:
              only:
                - master
  nightly:
    triggers:
      - schedule:
          cron: "0 9 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - generate-report
